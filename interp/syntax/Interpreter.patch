--- src/main/java/Interpreter.java	2022-09-01 09:02:14.196236480 +0900
+++ src/main/java/Interpreter.java.new	2022-09-01 09:06:23.955885462 +0900
@@ -38,10 +38,10 @@
 
     public void createTable(String name,
                             String primaryKey,
-                            List<Token> columns)
+                            List<? super Token> columns)
     {
         Table table = new Table(name, primaryKey);
-        for (Token t : columns) table.addColumn(t.getText());
+        for (Token t : (List<Token>)columns) table.addColumn(t.getText());
         tables.put(name, table);
     }
 
@@ -51,19 +51,19 @@
         t.add(row);
     }
 
-    public Object select(String name, List<Token> columns) {
+    public Object select(String name, List<? super Token> columns) {
         Table table = tables.get(name);
         ResultSet rs = new ResultSet();
-        for (Row r : table.rows.values()) rs.add( r.getColumns(columns) );
+        for (Row r : table.rows.values()) rs.add( r.getColumns((List<Token>)columns) );
         return rs;
     }
 
-    public Object select(String name, List<Token> columns, String key, Object value) {
+    public Object select(String name, List<? super Token> columns, String key, Object value) {
         Table table = tables.get(name);
         ResultSet rs = new ResultSet();
         if ( key.equals(table.getPrimaryKey()) ) {
             List<Object> selectedColumnData =
-                table.rows.get(value).getColumns(columns);
+                table.rows.get(value).getColumns((List<Token>)columns);
             if ( selectedColumnData.size()==1 ) return selectedColumnData.get(0);
             rs.add( selectedColumnData );
             return rs;
@@ -71,7 +71,7 @@
         // key isn't the primary key; walk linearly to find all rows satisfying
         for (Row r : table.rows.values()) {
             if ( r.values.get(key).equals(value) ) {
-                rs.add( r.getColumns(columns) );
+                rs.add( r.getColumns((List<Token>)columns) );
             }
         }
         return rs;
